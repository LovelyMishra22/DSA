#include<stdio.h>
#include<stdlib.h>

typedef struct ListNode
{
    int val;
    struct ListNode* next;
}ListNode;

typedef struct Graph
{
    int v;
    ListNode** array;
}Graph;

ListNode* getListNode(int data)
{
    ListNode* newNode = (ListNode*)malloc(sizeof(ListNode));
    newNode->val = data;
    newNode->next = NULL;
    return newNode;
}

Graph* createGraph(int v)
{
    Graph* graph = malloc(sizeof(Graph)) ;
    graph->v = v;
    graph->array = calloc(v, sizeof(ListNode));
    return graph;
}

void addEdge(Graph* graph, int i, int j)
{
    ListNode* node1 = getListNode(j);
    node1->next = graph->array[i];
    graph->array[i] = node1;

    ListNode* node2 = getListNode(i);
    node2->next = graph->array[j];
    graph->array[j] = node2;
}

void printGraph(Graph* graph)
{
    for(int i = 0; i < graph->v; i++)
    {
        printf("%d : ", i);
        ListNode* temp = graph->array[i];
        while(temp != NULL)
        {
            printf("%d ", temp->val);
            temp = temp->next;
        }
        printf("\n");
    }
}

int main()
{
    int v = 5;
    Graph* graph = createGraph(v);
    addEdge(graph, 0, 1);
    addEdge(graph, 0, 4);
    addEdge(graph, 1, 2);
    addEdge(graph, 1, 3);
    addEdge(graph, 1, 4);
    addEdge(graph, 2, 3);
    addEdge(graph, 3, 4);
    printGraph(graph);
}
