/*
    leetcode : 547 (Number of provinces)
    
    There are n cities. Some of them are connected, while some are not. If city a is connected directly with city b, and city b is connected directly with city c, then city a is connected indirectly with city c.
    
    A province is a group of directly or indirectly connected cities and no other cities outside of the group.
    
    You are given an n x n matrix isConnected where isConnected[i][j] = 1 if the ith city and the jth city are directly connected, and isConnected[i][j] = 0 otherwise.
    
    Return the total number of provinces.
*/


void dfs(int** isConnected, int isConnectedSize, int* isConnectedColSize, int* vis, int node)
{
    vis[node] = 1;
    for(int i = 0; i < isConnectedColSize[node]; i++)
    {
        if(vis[i] == 0 && isConnected[node][i] == 1)
        {
            dfs(isConnected, isConnectedSize, isConnectedColSize, vis, i );
        }
    }
}

int findCircleNum(int** isConnected, int isConnectedSize, int* isConnectedColSize) {
    int* vis = calloc(isConnectedSize, sizeof(int));
    int count = 0;
    for(int i = 0; i < isConnectedSize; i++)
    {
        if(vis[i] == 0)
        {
            dfs(isConnected, isConnectedSize, isConnectedColSize, vis, i);
            count++;
        }
    }
    return count;
}
